const socketUrl=document.querySelector('meta[name="socket-url"]').getAttribute("content"),guildId=document.querySelector('meta[name="guild-id"]').getAttribute("content"),thumbnail=document.getElementById("current-thumbnail"),trackAuthor=document.getElementById("track-author"),trackTitle=document.getElementById("track-title"),trackprogress=document.getElementById("track-progress"),timeCurrent=document.getElementById("time-current"),timeEnd=document.getElementById("time-end"),queueContent=document.getElementById("queue-content"),btnShuffle=document.getElementById("btn-shuffle"),btnPlayPause=document.getElementById("btn-play-pause"),btnNext=document.getElementById("btn-next"),btnPrevious=document.getElementById("btn-previous"),btnRepeat=document.getElementById("btn-repeat"),socket=io(socketUrl),setStatus=function(status){status.paused||btnPlayPause.setAttribute("class","fas fa-pause bg-light text-dark track-paused"),status.paused&&btnPlayPause.setAttribute("class","fas fa-play bg-light text-dark"),0!=status.repeat&&btnRepeat.setAttribute("class","fas fa-redo-alt btn text-white bg-active"),0==status.repeat&&btnRepeat.setAttribute("class","fas fa-redo-alt btn text-white")},updateQueue=function(queue){let html="";queue.forEach((track,i)=>{html+=`\n            <tr class="w-100 track-item">\n                <td class="px-2 text-end">${i+1}</td>\n                <td class="d-flex align-items-center"><img class="img img-fluid playlist-thumbnail my-2 rounded"\n                        src="${track.thumbnail}"\n                        alt="thumbnail">\n                    <div class="track-info mx-2">\n                        <p class="author">${track.author}</p>\n                        <p class="title">${track.title}</p>\n                    </div>\n                </td>\n                <td class="p-2 text-center">${track.duration}</td>\n            </tr>\n        `}),queueContent.innerHTML=html};socket.on("connect",()=>{socket.emit("join",guildId)}),socket.on("receivePlayRepeatStatus",status=>{setStatus(status)}),socket.on("startNewTrack",data=>{thumbnail.setAttribute("style",`\n        background-image: url(${data.track.thumbnail});\n        background-repeat: no-repeat;\n        background-position: left;background-size: cover;\n    `),trackAuthor.innerText=data.track.author,trackTitle.innerText=data.track.title,updateQueue(data.queue)}),socket.on("receiveTime",data=>{trackprogress.value=data.progress,timeCurrent.innerText=data.current,timeEnd.innerText=data.end}),socket.on("receiveStatus",data=>{updateQueue(data.queue),setStatus(data.track)}),socket.on("receiveQueue",data=>{updateQueue(data)}),btnShuffle.addEventListener("click",(function(e){socket.emit("clientShuffleQueue",guildId)})),btnNext.addEventListener("click",(function(e){socket.emit("clientNextQueue",guildId)})),btnPlayPause.addEventListener("click",(function(e){socket.emit("clientPlayPause",guildId)})),btnRepeat.addEventListener("click",(function(e){socket.emit("clientRepeat",guildId)})),btnPrevious.addEventListener("click",(function(e){socket.emit("clientPreviousQueue",guildId)})),setInterval(()=>{socket.emit("clientGetTime",guildId)},500);