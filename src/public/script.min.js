const socketUrl=document.querySelector('meta[name="socket-url"]').getAttribute("content"),guildId=document.querySelector('meta[name="guild-id"]').getAttribute("content"),thumbnail=document.getElementById("current-thumbnail"),trackAuthor=document.getElementById("track-author"),trackTitle=document.getElementById("track-title"),trackprogress=document.getElementById("track-progress"),timeCurrent=document.getElementById("time-current"),timeEnd=document.getElementById("time-end"),queueContent=document.getElementById("queue-content"),btnShuffle=document.getElementById("btn-shuffle"),btnPlayPause=document.getElementById("btn-play-pause"),btnNext=document.getElementById("btn-next"),btnPrevious=document.getElementById("btn-previous"),btnRepeat=document.getElementById("btn-repeat"),inputSearch=document.getElementById("input-search"),nowPlayingTitle=document.getElementById("nowplaying-title"),nowPlayingDuration=document.getElementById("nowplaying-duration"),totalQueue=document.getElementById("total-queue"),totalDuration=document.getElementById("total-duration"),inputQueue=document.getElementById("input-queue"),queueMessage=document.getElementById("queue-message"),btnAdd=document.getElementById("btn-add"),socket=io(socketUrl),setStatus=function(status){status.paused||btnPlayPause.setAttribute("class","fas fa-pause bg-light text-dark track-paused"),status.paused&&btnPlayPause.setAttribute("class","fas fa-play bg-light text-dark"),0!=status.repeat&&btnRepeat.setAttribute("class","fas fa-redo-alt btn text-white bg-active"),0==status.repeat&&btnRepeat.setAttribute("class","fas fa-redo-alt btn text-white")},trackItemSelected=function(position){console.log("position",position),socket.emit("clientTrackSelected",{guild:guildId,position:position})},updateQueue=function(queue){let html="",totalSeconds=0;queue.forEach((track,i)=>{totalSeconds+=getTimeToSecond(track.duration),html+=`\n            <tr class="w-100 track-item" data-track-number="${i+1}" onclick="trackItemSelected(${i+1})" data-title="${track.title.toLowerCase()} ${track.author.toLowerCase()}">\n                <td class="px-2 text-end">${i+1}</td>\n                <td class="d-flex align-items-center"><img class="img img-fluid playlist-thumbnail my-2 rounded"\n                        src="${track.thumbnail}"\n                        alt="thumbnail">\n                    <div class="track-info mx-2">\n                        <p class="author">${track.author}</p>\n                        <p class="title">${track.title}</p>\n                    </div>\n                </td>\n                <td class="p-2 text-center">${track.duration}</td>\n            </tr>\n        `}),totalQueue.innerText=`Queue - ${queue.length} tracks`,totalDuration.innerText=getSecondToTime(totalSeconds),queueContent.innerHTML=html},filterQueue=function(text){const queue=document.querySelectorAll("tr[data-title]");if(""==text.trim())return queue.forEach((track,i)=>{track.classList.remove("d-none")}),void(totalQueue.innerText=`Queue - ${queue.length} tracks`);const queueSelected=document.querySelectorAll(`tr[data-title]:not(tr[data-title*="${text.trim()}"])`);queue.forEach((track,i)=>{track.classList.remove("d-none")}),queueSelected.forEach((track,i)=>{track.classList.add("d-none")}),totalQueue.innerText=`Filtered ${queue.length-queueSelected.length} from ${queue.length} tracks`};let __dragged=!1;const getTimeToSecond=function(duration){const time=duration.split(":");let seconds=0,index_=time.length;for(let index=0;index<time.length;index++)seconds+=parseInt(time[index_-1])*(60**index==0?1:60**index),index_--;return seconds},getSecondToTime=function(seconds){const h=Math.floor(seconds/3600).toString().padStart(2,"0"),m=Math.floor(seconds%3600/60).toString().padStart(2,"0"),s=Math.floor(seconds%60).toString().padStart(2,"0");return time=("00"==h?"":h+":")+m+":"+s};socket.on("connect",()=>{socket.emit("join",guildId),__dragged=!1}),socket.on("receivePlayRepeatStatus",status=>{setStatus(status)}),socket.on("startNewTrack",data=>{thumbnail.setAttribute("style",`\n        background-image: url(${data.track.thumbnail});\n        background-repeat: no-repeat;\n        background-position: left;\n        background-size: cover;\n    `),trackAuthor.innerText=data.track.author,trackTitle.innerText=data.track.title,nowPlayingTitle.innerText=`${data.track.author} - ${data.track.title}`,nowPlayingDuration.innerText=data.track.duration,updateQueue(data.queue),filterQueue(inputSearch.value)}),socket.on("receiveTime",data=>{const end_=getTimeToSecond(data.end),current=getTimeToSecond(data.current);1!=__dragged&&(current>end_||(trackprogress.max=end_,trackprogress.value=current,timeCurrent.innerText=data.current,timeEnd.innerText=data.end))}),inputSearch.addEventListener("keyup",(function(e){filterQueue(this.value)})),trackprogress.addEventListener("mousedown",(function(e){__dragged=!0})),trackprogress.addEventListener("mouseup",(function(e){__dragged=!1,socket.emit("clientSeek",{guild:guildId,seek:1e3*this.value})})),trackprogress.addEventListener("input",(function(e){const time=getSecondToTime(this.value);timeCurrent.innerText=time})),btnAdd.addEventListener("click",(function(e){if(""==inputQueue.value.trim())return;const query=inputQueue.value.trim();socket.emit("clientInputQuery",{guild:guildId,query:query}),queueMessage.innerText="Processing query . . .",queueMessage.classList.remove("d-none")})),socket.on("receiveStatus",data=>{updateQueue(data.queue),setStatus(data.track),filterQueue(inputSearch.value)}),socket.on("receiveQueue",data=>{updateQueue(data),filterQueue(inputSearch.value)}),socket.on("receiveQueueMessage",message=>{queueMessage.innerText=message,inputQueue.value="",setTimeout(()=>{queueMessage.classList.add("d-none")},3e3)}),btnShuffle.addEventListener("click",(function(e){socket.emit("clientShuffleQueue",guildId)})),btnNext.addEventListener("click",(function(e){socket.emit("clientNextQueue",guildId)})),btnPlayPause.addEventListener("click",(function(e){socket.emit("clientPlayPause",guildId)})),btnRepeat.addEventListener("click",(function(e){socket.emit("clientRepeat",guildId)})),btnPrevious.addEventListener("click",(function(e){socket.emit("clientPreviousQueue",guildId)})),setInterval(()=>{socket.emit("clientGetTime",guildId)},500);