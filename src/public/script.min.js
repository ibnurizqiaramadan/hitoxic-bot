const socketUrl=document.querySelector('meta[name="socket-url"]').getAttribute("content"),guildId=document.querySelector('meta[name="guild-id"]').getAttribute("content"),thumbnail=document.getElementById("current-thumbnail"),trackAuthor=document.getElementById("track-author"),trackTitle=document.getElementById("track-title"),trackprogress=document.getElementById("track-progress"),timeCurrent=document.getElementById("time-current"),timeEnd=document.getElementById("time-end"),queueContent=document.getElementById("queue-content"),btnShuffle=document.getElementById("btn-shuffle"),btnPlayPause=document.getElementById("btn-play-pause"),btnNext=document.getElementById("btn-next"),btnPrevious=document.getElementById("btn-previous"),btnRepeat=document.getElementById("btn-repeat"),inputSearch=document.getElementById("input-search"),nowPlayingTitle=document.getElementById("nowplaying-title"),nowPlayingDuration=document.getElementById("nowplaying-duration"),totalQueue=document.getElementById("total-queue"),totalDuration=document.getElementById("total-duration"),inputQueue=document.getElementById("input-queue"),queueMessage=document.getElementById("queue-message"),btnAdd=document.getElementById("btn-add"),socket=io(socketUrl),setStatus=function(e){e.paused||btnPlayPause.setAttribute("class","fas fa-pause bg-light text-dark track-paused"),e.paused&&btnPlayPause.setAttribute("class","fas fa-play bg-light text-dark"),0!=e.repeat&&btnRepeat.setAttribute("class","fas fa-redo-alt btn text-white bg-active"),0==e.repeat&&btnRepeat.setAttribute("class","fas fa-redo-alt btn text-white")},trackItemSelected=function(e){console.log("position",e),socket.emit("clientTrackSelected",{guild:guildId,position:e})},updateQueue=function(e){let t="",n=0;e.forEach((e,u)=>{n+=getTimeToSecond(e.duration),t+=`\n            <tr class="w-100 track-item" data-track-number="${u+1}" onclick="trackItemSelected(${u+1})" data-title="${e.title.toLowerCase()} ${e.author.toLowerCase()}">\n                <td class="px-2 text-end">${u+1}</td>\n                <td class="d-flex align-items-center"><img class="img img-fluid playlist-thumbnail my-2 rounded"\n                        src="${e.thumbnail}"\n                        alt="thumbnail">\n                    <div class="track-info mx-2">\n                        <p class="author">${e.author}</p>\n                        <p class="title">${e.title}</p>\n                    </div>\n                </td>\n                <td class="p-2 text-center">${e.duration}</td>\n            </tr>\n        `}),totalQueue.innerText=`Queue - ${e.length} tracks`,totalDuration.innerText=getSecondToTime(n),queueContent.innerHTML=t},filterQueue=function(e){const t=document.querySelectorAll("tr[data-title]"),n=e.trim().toLowerCase();if(""==n){return t.forEach((e,t)=>{e.classList.remove("d-none")}),void(totalQueue.innerText=`Queue - ${t.length} tracks`)}const u=document.querySelectorAll(`tr[data-title]:not(tr[data-title*="${n}"])`);t.forEach((e,t)=>{e.classList.remove("d-none")}),u.forEach((e,t)=>{e.classList.add("d-none")}),totalQueue.innerText=`Filtered ${t.length-u.length} from ${t.length} tracks`};let __dragged=!1;const getTimeToSecond=function(e){const t=e.split(":");let n=0,u=t.length;for(let e=0;e<t.length;e++){n+=parseInt(t[u-1])*(60**e==0?1:60**e),u--}return n},getSecondToTime=function(e){const t=Math.floor(e/3600).toString().padStart(2,"0"),n=Math.floor(e%3600/60).toString().padStart(2,"0"),u=Math.floor(e%60).toString().padStart(2,"0");return time=("00"==t?"":t+":")+n+":"+u};socket.on("connect",()=>{socket.emit("join",guildId),__dragged=!1}),socket.on("receivePlayRepeatStatus",e=>{setStatus(e)}),socket.on("startNewTrack",e=>{thumbnail.setAttribute("style",`\n        background-image: url(${e.track.thumbnail});\n        background-repeat: no-repeat;\n        background-position: left;\n        background-size: cover;\n    `),trackAuthor.innerText=e.track.author,trackTitle.innerText=e.track.title,nowPlayingTitle.innerText=`${e.track.author} - ${e.track.title}`,nowPlayingDuration.innerText=e.track.duration,updateQueue(e.queue),filterQueue(inputSearch.value)}),socket.on("receiveTime",e=>{const t=getTimeToSecond(e.end),n=getTimeToSecond(e.current);1!=__dragged&&(n>t||(trackprogress.max=t,trackprogress.value=n,timeCurrent.innerText=e.current,timeEnd.innerText=e.end))}),inputSearch.addEventListener("keyup",function(e){filterQueue(this.value)}),trackprogress.addEventListener("mousedown",function(e){__dragged=!0}),trackprogress.addEventListener("mouseup",function(e){__dragged=!1,socket.emit("clientSeek",{guild:guildId,seek:1e3*this.value})}),trackprogress.addEventListener("input",function(e){const t=getSecondToTime(this.value);timeCurrent.innerText=t}),btnAdd.addEventListener("click",function(e){if(""==inputQueue.value.trim()){return}const t=inputQueue.value.trim();socket.emit("clientInputQuery",{guild:guildId,query:t,payload:window.location.pathname.substr(1)}),queueMessage.innerText="Processing query . . .",queueMessage.classList.remove("d-none")}),socket.on("receiveStatus",e=>{updateQueue(e.queue),setStatus(e.track),filterQueue(inputSearch.value)}),socket.on("receiveQueue",e=>{updateQueue(e),filterQueue(inputSearch.value)}),socket.on("receiveQueueMessage",e=>{queueMessage.innerText=e,inputQueue.value="",setTimeout(()=>{queueMessage.classList.add("d-none")},3e3)}),btnShuffle.addEventListener("click",function(e){socket.emit("clientShuffleQueue",guildId)}),btnNext.addEventListener("click",function(e){socket.emit("clientNextQueue",guildId)}),btnPlayPause.addEventListener("click",function(e){socket.emit("clientPlayPause",guildId)}),btnRepeat.addEventListener("click",function(e){socket.emit("clientRepeat",guildId)}),btnPrevious.addEventListener("click",function(e){socket.emit("clientPreviousQueue",guildId)}),setInterval(()=>{socket.emit("clientGetTime",guildId)},500);